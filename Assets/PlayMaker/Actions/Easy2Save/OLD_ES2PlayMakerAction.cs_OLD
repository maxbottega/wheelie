using System;
using UnityEngine;

namespace HutongGames.PlayMaker.Actions
{
	/* UTILITY FUNCTIONS */
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Checks if data Delete at the specified path.")]
	public class Delete : FsmStateAction
	{
		[Tooltip("The tag that we want to delete (Optional).")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The file we want to delete, or delete the tag from.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
		}
		
		public override void OnEnter()
		{
			string path;
			if(uniqueTag.Value != "")
				path = saveFile.Value+"?tag="+uniqueTag.Value;
			else
				path = saveFile.Value;
			ES2.Delete(path);
			Log("Deleted "+path);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Checks if data exists at the specified path.")]
	public class Exists : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The Event to send if this it does exist.")]
		public FsmEvent ifExists;
		[RequiredField]
		[Tooltip("The event to sent if it doesn't exist.")]
		public FsmEvent ifDoesNotExist;
		[Tooltip("The tag that we want to check for (Optional).")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The file we want to check the existence of.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
		}
		
		public override void OnEnter()
		{
			string path;
			if(uniqueTag.Value != "")
				path = saveFile.Value+"?tag="+uniqueTag.Value;
			else
				path = saveFile.Value;
			
			Log("Checked existence of "+path);
			
			if(ES2.Exists(path))
				Fsm.Event(ifExists);
			else
				Fsm.Event(ifDoesNotExist);
		}
	}
	
	/* NON-COMPONENT TYPES */
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Saves an int.")]
	public class SaveInt : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable we want to save.")]
		public FsmInt saveValue;
		[RequiredField]
		[Tooltip("A unique tag for this save. For example, the object's name if no other objects use the same name.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file that we'll create to store our data.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			saveValue = 0;
		}
		
		public override void OnEnter()
		{
			ES2.Save(saveValue.Value, saveFile+"?tag="+uniqueTag);
			Log("Saved to "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Loads a previously saved float.")]
	public class LoadInt : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable where we'll load our data into.")]
		public FsmInt loadValue;
		[RequiredField]
		[Tooltip("The unique tag for the data we want to load.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file our data is stored in.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			loadValue = 0;
		}
		
		public override void OnEnter()
		{
			loadValue.Value = ES2.Load<int>(saveFile+"?tag="+uniqueTag);
			Log("Loaded from "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Saves a float.")]
	public class SaveFloat : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable we want to save.")]
		public FsmFloat saveValue;
		[RequiredField]
		[Tooltip("A unique tag for this save. For example, the object's name if no other objects use the same name.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file that we'll create to store our data.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			saveValue = 0;
		}
		
		public override void OnEnter()
		{
			ES2.Save(saveValue.Value, saveFile+"?tag="+uniqueTag);
			Log("Saved to "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Loads a previously saved float.")]
	public class LoadFloat : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable where we'll load our data into.")]
		public FsmFloat loadValue;
		[RequiredField]
		[Tooltip("The unique tag for the data we want to load.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file our data is stored in.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			loadValue = 0;
		}
		
		public override void OnEnter()
		{
			loadValue.Value = ES2.Load<float>(saveFile+"?tag="+uniqueTag);
			Log("Loaded from "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Saves a bool.")]
	public class SaveBool : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable we want to save.")]
		public FsmBool saveValue;
		[RequiredField]
		[Tooltip("A unique tag for this save. For example, the object's name if no other objects use the same name.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file that we'll create to store our data.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			saveValue = false;
		}
		
		public override void OnEnter()
		{
			ES2.Save(saveValue.Value, saveFile+"?tag="+uniqueTag);
			Log("Saved to "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Loads a previously saved bool.")]
	public class LoadBool : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable where we'll load our data into.")]
		public FsmBool loadValue;
		[RequiredField]
		[Tooltip("The unique tag for the data we want to load.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file our data is stored in.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			loadValue = false;
		}
		
		public override void OnEnter()
		{
			loadValue.Value = ES2.Load<bool>(saveFile+"?tag="+uniqueTag);
			Log("Loaded from "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Saves a string.")]
	public class SaveString : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable we want to save.")]
		public FsmString saveValue;
		[RequiredField]
		[Tooltip("A unique tag for this save. For example, the object's name if no other objects use the same name.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file that we'll create to store our data.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			saveValue = "";
		}
		
		public override void OnEnter()
		{
			ES2.Save(saveValue.Value, saveFile+"?tag="+uniqueTag);
			Log("Saved to "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Loads a previously saved string.")]
	public class LoadString : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable where we'll load our data into.")]
		public FsmString loadValue;
		[RequiredField]
		[Tooltip("The unique tag for the data we want to load.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file our data is stored in.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			loadValue = "";
		}
		
		public override void OnEnter()
		{
			loadValue.Value = ES2.Load<string>(saveFile+"?tag="+uniqueTag);
			Log("Loaded from "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Saves a Vector2.")]
	public class SaveVector2 : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable we want to save.")]
		public FsmVector2 saveValue;
		[RequiredField]
		[Tooltip("A unique tag for this save. For example, the object's name if no other objects use the same name.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file that we'll create to store our data.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			saveValue = Vector2.zero;
		}
		
		public override void OnEnter()
		{
			ES2.Save(saveValue.Value, saveFile+"?tag="+uniqueTag);
			Log("Saved to "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Loads a previously saved Vector2.")]
	public class LoadVector2 : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable where we'll load our data into.")]
		public FsmVector2 loadValue;
		[RequiredField]
		[Tooltip("The unique tag for the data we want to load.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file our data is stored in.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			loadValue = Vector2.zero;
		}
		
		public override void OnEnter()
		{
			loadValue.Value = ES2.Load<Vector2>(saveFile+"?tag="+uniqueTag);
			Log("Loaded from "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Saves a Vector3.")]
	public class SaveVector3 : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable we want to save.")]
		public FsmVector3 saveValue;
		[RequiredField]
		[Tooltip("A unique tag for this save. For example, the object's name if no other objects use the same name.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file that we'll create to store our data.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			saveValue = Vector3.zero;
		}
		
		public override void OnEnter()
		{
			ES2.Save(saveValue.Value, saveFile+"?tag="+uniqueTag);
			Log("Saved to "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Loads a previously saved Vector3.")]
	public class LoadVector3 : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable where we'll load our data into.")]
		public FsmVector3 loadValue;
		[RequiredField]
		[Tooltip("The unique tag for the data we want to load.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file our data is stored in.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			loadValue = Vector3.zero;
		}
		
		public override void OnEnter()
		{
			loadValue.Value = ES2.Load<Vector3>(saveFile+"?tag="+uniqueTag);
			Log("Loaded from "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Saves a Color.")]
	public class SaveColor : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable we want to save.")]
		public FsmColor saveValue;
		[RequiredField]
		[Tooltip("A unique tag for this save. For example, the object's name if no other objects use the same name.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file that we'll create to store our data.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			saveValue = Color.black;
		}
		
		public override void OnEnter()
		{
			ES2.Save(saveValue.Value, saveFile+"?tag="+uniqueTag);
			Log("Saved to "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Loads a previously saved Color.")]
	public class LoadColor : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable where we'll load our data into.")]
		public FsmColor loadValue;
		[RequiredField]
		[Tooltip("The unique tag for the data we want to load.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file our data is stored in.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			loadValue = Color.black;
		}
		
		public override void OnEnter()
		{
			loadValue.Value = ES2.Load<Color>(saveFile+"?tag="+uniqueTag);
			Log("Loaded from "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Saves a Texture.")]
	public class SaveTexture : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable we want to save.")]
		public FsmTexture saveValue;
		[RequiredField]
		[Tooltip("A unique tag for this save. For example, the object's name if no other objects use the same name.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file that we'll create to store our data.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			saveValue = null;
		}
		
		public override void OnEnter()
		{
			ES2.Save((saveValue.Value) as Texture2D, saveFile+"?tag="+uniqueTag);
			Log("Saved to "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Loads a previously saved Texture.")]
	public class LoadTexture : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable where we'll load our data into.")]
		public FsmTexture loadValue;
		[RequiredField]
		[Tooltip("The unique tag for the data we want to load.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file our data is stored in.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			loadValue = null;
		}
		
		public override void OnEnter()
		{
			loadValue.Value = ES2.Load<Texture2D>(saveFile+"?tag="+uniqueTag) as Texture;
			Log("Loaded from "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Saves a Quaternion.")]
	public class SaveQuaternion : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable we want to save.")]
		public FsmQuaternion saveValue;
		[RequiredField]
		[Tooltip("A unique tag for this save. For example, the object's name if no other objects use the same name.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file that we'll create to store our data.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			saveValue = Quaternion.identity;
		}
		
		public override void OnEnter()
		{
			ES2.Save(saveValue.Value, saveFile+"?tag="+uniqueTag);
			Log("Saved to "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Loads a previously saved Quaternion.")]
	public class LoadQuaternion : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The variable where we'll load our data into.")]
		public FsmQuaternion loadValue;
		[RequiredField]
		[Tooltip("The unique tag for the data we want to load.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file our data is stored in.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
			loadValue = Quaternion.identity;
		}
		
		public override void OnEnter()
		{
			loadValue.Value = ES2.Load<Quaternion>(saveFile+"?tag="+uniqueTag);
			Log("Loaded from "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	/* COMPONENT TYPES */
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Saves a Transform.")]
	public class SaveTransform : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The GameObject containing the Transform we want to save.")]
		public FsmOwnerDefault saveValue;
		[RequiredField]
		[Tooltip("A unique tag for this save. For example, the object's name if no other objects use the same name.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file that we'll create to store our data.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
		}
		
		public override void OnEnter()
		{
			GameObject go = Fsm.GetOwnerDefaultTarget(saveValue);
			Transform component;
			
			if(go == null)
			{
				LogError("Could not save Transform. No GameObject has been specified.");
				Finish ();
				return;
			}
			
			if((component = go.GetComponent<Transform>()) == null)
			{
				LogError("Could not save Transform. GameObject does not contain a Transform.");
				Finish ();
				return;
			}

			ES2.Save(component, saveFile+"?tag="+uniqueTag);
			Log("Saved to "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Loads a previously saved Transform.")]
	public class LoadTransform : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The GameObject containing the Transform we want to load into.")]
		public FsmOwnerDefault loadValue;
		[RequiredField]
		[Tooltip("The unique tag for the data we want to load.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file our data is stored in.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
		}
		
		public override void OnEnter()
		{
			GameObject go = Fsm.GetOwnerDefaultTarget(loadValue);
			Transform component;
			
			if(go == null)
			{
				LogError("Could not save Transform. No GameObject has been specified.");
				Finish ();
				return;
			}
			
			if((component = go.GetComponent<Transform>()) == null)
			{
				LogError("Could not save Transform. GameObject does not contain a Transform.");
				Finish ();
				return;
			}
			
			ES2.Load<Transform>(saveFile+"?tag="+uniqueTag, component);
			Log("Loaded from "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}

	[ActionCategory("Easy Save 2")]
	[Tooltip("Saves a MeshCollider.")]
	public class SaveMeshCollider : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The GameObject containing the MeshCollider we want to save.")]
		public FsmOwnerDefault saveValue;
		[RequiredField]
		[Tooltip("A unique tag for this save. For example, the object's name if no other objects use the same name.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file that we'll create to store our data.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
		}
		
		public override void OnEnter()
		{
			GameObject go = Fsm.GetOwnerDefaultTarget(saveValue);
			MeshCollider component;
			
			if(go == null)
			{
				LogError("Could not save MeshCollider. No GameObject has been specified.");
				Finish ();
				return;
			}
			
			if((component = go.GetComponent<MeshCollider>()) == null)
			{
				LogError("Could not save MeshCollider. GameObject does not contain a MeshCollider.");
				Finish ();
				return;
			}

			ES2.Save(component, saveFile+"?tag="+uniqueTag);
			Log("Saved to "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Loads a previously saved MeshCollider.")]
	public class LoadMeshCollider : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The GameObject containing the MeshCollider we want to load into.")]
		public FsmOwnerDefault loadValue;
		[RequiredField]
		[Tooltip("The unique tag for the data we want to load.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file our data is stored in.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
		}
		
		public override void OnEnter()
		{
			GameObject go = Fsm.GetOwnerDefaultTarget(loadValue);
			MeshCollider component;
			
			if(go == null)
			{
				LogError("Could not save MeshCollider. No GameObject has been specified.");
				Finish ();
				return;
			}
			
			if((component = go.GetComponent<MeshCollider>()) == null)
			{
				LogError("Could not save MeshCollider. GameObject does not contain a MeshCollider.");
				Finish ();
				return;
			}
			
			ES2.Load<MeshCollider>(saveFile+"?tag="+uniqueTag, component);
			Log("Loaded from "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Saves a BoxCollider.")]
	public class SaveBoxCollider : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The GameObject containing the BoxCollider we want to save.")]
		public FsmOwnerDefault saveValue;
		[RequiredField]
		[Tooltip("A unique tag for this save. For example, the object's name if no other objects use the same name.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file that we'll create to store our data.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
		}
		
		public override void OnEnter()
		{
			GameObject go = Fsm.GetOwnerDefaultTarget(saveValue);
			BoxCollider component;
			
			if(go == null)
			{
				LogError("Could not save BoxCollider. No GameObject has been specified.");
				Finish ();
				return;
			}
			
			if((component = go.GetComponent<BoxCollider>()) == null)
			{
				LogError("Could not save BoxCollider. GameObject does not contain a BoxCollider.");
				Finish ();
				return;
			}

			ES2.Save(component, saveFile+"?tag="+uniqueTag);
			Log("Saved to "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Loads a previously saved BoxCollider.")]
	public class LoadBoxCollider : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The GameObject containing the BoxCollider we want to load into.")]
		public FsmOwnerDefault loadValue;
		[RequiredField]
		[Tooltip("The unique tag for the data we want to load.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file our data is stored in.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
		}
		
		public override void OnEnter()
		{
			GameObject go = Fsm.GetOwnerDefaultTarget(loadValue);
			BoxCollider component;
			
			if(go == null)
			{
				LogError("Could not save BoxCollider. No GameObject has been specified.");
				Finish ();
				return;
			}
			
			if((component = go.GetComponent<BoxCollider>()) == null)
			{
				LogError("Could not save BoxCollider. GameObject does not contain a BoxCollider.");
				Finish ();
				return;
			}
			
			ES2.Load<BoxCollider>(saveFile+"?tag="+uniqueTag, component);
			Log("Loaded from "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Saves a SphereCollider.")]
	public class SaveSphereCollider : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The GameObject containing the SphereCollider we want to save.")]
		public FsmOwnerDefault saveValue;
		[RequiredField]
		[Tooltip("A unique tag for this save. For example, the object's name if no other objects use the same name.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file that we'll create to store our data.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
		}
		
		public override void OnEnter()
		{
			GameObject go = Fsm.GetOwnerDefaultTarget(saveValue);
			SphereCollider component;
			
			if(go == null)
			{
				LogError("Could not save SphereCollider. No GameObject has been specified.");
				Finish ();
				return;
			}
			
			if((component = go.GetComponent<SphereCollider>()) == null)
			{
				LogError("Could not save SphereCollider. GameObject does not contain a SphereCollider.");
				Finish ();
				return;
			}

			ES2.Save(component, saveFile+"?tag="+uniqueTag);
			Log("Saved to "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Loads a previously saved SphereCollider.")]
	public class LoadSphereCollider : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The GameObject containing the SphereCollider we want to load into.")]
		public FsmOwnerDefault loadValue;
		[RequiredField]
		[Tooltip("The unique tag for the data we want to load.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file our data is stored in.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
		}
		
		public override void OnEnter()
		{
			GameObject go = Fsm.GetOwnerDefaultTarget(loadValue);
			SphereCollider component;
			
			if(go == null)
			{
				LogError("Could not save SphereCollider. No GameObject has been specified.");
				Finish ();
				return;
			}
			
			if((component = go.GetComponent<SphereCollider>()) == null)
			{
				LogError("Could not save SphereCollider. GameObject does not contain a SphereCollider.");
				Finish ();
				return;
			}
			
			ES2.Load<SphereCollider>(saveFile+"?tag="+uniqueTag, component);
			Log("Loaded from "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Saves a CapsuleCollider.")]
	public class SaveCapsuleCollider : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The GameObject containing the CapsuleCollider we want to save.")]
		public FsmOwnerDefault saveValue;
		[RequiredField]
		[Tooltip("A unique tag for this save. For example, the object's name if no other objects use the same name.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file that we'll create to store our data.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
		}
		
		public override void OnEnter()
		{
			GameObject go = Fsm.GetOwnerDefaultTarget(saveValue);
			CapsuleCollider component;
			
			if(go == null)
			{
				LogError("Could not save CapsuleCollider. No GameObject has been specified.");
				Finish ();
				return;
			}
			
			if((component = go.GetComponent<CapsuleCollider>()) == null)
			{
				LogError("Could not save CapsuleCollider. GameObject does not contain a CapsuleCollider.");
				Finish ();
				return;
			}

			ES2.Save(component, saveFile+"?tag="+uniqueTag);
			Log("Saved to "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
	
	[ActionCategory("Easy Save 2")]
	[Tooltip("Loads a previously saved CapsuleCollider.")]
	public class LoadCapsuleCollider : FsmStateAction
	{
		[RequiredField]
		[Tooltip("The GameObject containing the CapsuleCollider we want to load into.")]
		public FsmOwnerDefault loadValue;
		[RequiredField]
		[Tooltip("The unique tag for the data we want to load.")]
		public FsmString uniqueTag = "";
		[RequiredField]
		[Tooltip("The name of the file our data is stored in.")]
		public FsmString saveFile = "defaultES2File.txt";
		
		public override void Reset()
		{
			uniqueTag = "";
			saveFile = "defaultES2File.txt";
		}
		
		public override void OnEnter()
		{
			GameObject go = Fsm.GetOwnerDefaultTarget(loadValue);
			CapsuleCollider component;
			
			if(go == null)
			{
				LogError("Could not save CapsuleCollider. No GameObject has been specified.");
				Finish ();
				return;
			}
			
			if((component = go.GetComponent<CapsuleCollider>()) == null)
			{
				LogError("Could not save CapsuleCollider. GameObject does not contain a CapsuleCollider.");
				Finish ();
				return;
			}
			
			ES2.Load<CapsuleCollider>(saveFile+"?tag="+uniqueTag, component);
			Log("Loaded from "+saveFile+"?tag="+uniqueTag);
			Finish();
		}
	}
}